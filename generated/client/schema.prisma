// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../generated/client" // relative to schema.prisma
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  email        String           @unique
  password     String
  salt         String?
  cv           String?
  personalIfo  Json?
  applications JobApplication[]
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

model Company {
  id                         Int                 @id @default(autoincrement())
  email                      String              @unique
  password                   String?
  salt                       String?
  tenantId                   String?
  location                   Json?
  info                       Json?
  registerToken              String?
  registerTokenExpired       DateTime?
  forgotPasswordToken        DateTime?
  forgotPasswordTokenExpired DateTime?
  platform                   PlatFormStatus      @default(JOBLISTING)
  jobs                       JobListing[]
  registeredBy               RegisterByPlatform? @default(JOBLISTING)
  createdAt                  DateTime            @default(now())
  updatedAt                  DateTime            @updatedAt
}

model JobListing {
  id             Int              @id @default(autoincrement())
  title          String
  description    String
  employmentType EmploymentType   @default(FULL_TIME)
  workplaceType  WorkplaceType    @default(ON_SITE)
  referralSource String?
  startDate      DateTime
  endDate        DateTime?
  status         JobStatus        @default(ACTIVE)
  departmentId   String?
  locationId     String?
  location       Json?
  keywords       String[]         @default([])
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  applications   JobApplication[]
  companyId      Int
  company        Company          @relation(fields: [companyId], references: [id])

  @@index([locationId])
  @@index([status])
}

model JobApplication {
  id              Int               @id @default(autoincrement())
  candidateId     String
  candidate       User              @relation(fields: [userId], references: [id])
  resumeKey       String?
  additionalNotes String?           @db.Text
  referralSource  String?
  userId          Int
  status          ApplicationStatus @default(PENDING)
  jobListingId    Int
  jobListing      JobListing        @relation(fields: [jobListingId], references: [id])
  createdAt       DateTime          @default(now())

  @@index([candidateId])
  @@index([jobListingId])
}

//ENUMS

enum EmploymentType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  OTHER
  VOLUNTEER
  INTERNSHIP
}

enum WorkplaceType {
  ON_SITE
  HYBRID
  REMOTE
}

enum JobStatus {
  ACTIVE
  INACTIVE
  EXPIRED
}

enum ApplicationStatus {
  PENDING
  REVIEW
  INTERVIEWING
  OFFERED
  ONBOARDING
  HIRED
  REJECTED
}

enum UserRole {
  ONBOARDING_EMPLOYEE
  EMPLOYEE
  HR
  EXTERNAL_ACCOUNTANT
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum PlatFormStatus {
  HRM
  JOBLISTING
}

enum RegisterByPlatform {
  GOOGLE
  JOBLISTING
}
